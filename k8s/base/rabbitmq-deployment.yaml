apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-service
  namespace: ns-team-ns-team-sites-xp-space-cat-dev
spec:
  selector:
    app: rabbitmq
  ports:
    - protocol: TCP
      name: rabbitmqport
      port: 5672
      targetPort: 5672
    - protocol: TCP
      name: managementport
      port: 15672
      targetPort: 15672
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq-statefulset
  namespace: ns-team-ns-team-sites-xp-space-cat-dev
spec:
  serviceName: rabbitmq-service
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:3.9.5-management
          ports:
            - containerPort: 5672
            - containerPort: 15672
          env:
            - name: RABBITMQ_DEFAULT_USER
              valueFrom:
                secretKeyRef:
                  name: franklin-site-status-secrets
                  key: rabbitmq-username
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom:
                secretKeyRef:
                  name: franklin-site-status-secrets
                  key: rabbitmq-password
          volumeMounts:
            - name: rabbitmq-data
              mountPath: /var/lib/rabbitmq/mnesia
  volumeClaimTemplates:
    - metadata:
        name: rabbitmq-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 2Gi # Enough I guess?
---
apiVersion: contour.heptio.com/v1beta1
kind: IngressRoute
metadata:
  name: spacecat-rabbitmq-ingress-corp
spec:
  virtualhost:
    fqdn: spacecat-rabbitmq.corp.ethos09-prod-va7.ethos.adobe.net
    tls:
      secretName: heptio-contour/cluster-ssl-corp
  routes:
    - match: /
      services:
        - name: rabbitmq-service
          port: 15672
